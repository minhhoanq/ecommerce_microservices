syntax = "proto3";

service UserService {
    rpc GetUsers(Emty) returns (User) {}
    rpc RegisterUser(UserRegister) returns (RegisterResponse) {}

    rpc GetSessionUser(SessionRequest) returns (Session) {}

    rpc DecodeToken(TokenRequest) returns (decode) {}
}

message Emty {}

message UserRegister {
    string email = 1;
    string password = 2;
    string first_name = 3;
    string last_name = 4;
    string sex = 5;
    string date_of_birth = 6;
    string avatar = 7;
    string client_agent = 8;
    string client_ip = 9;
}

message UserRegisterRes {
    int32 id = 1;
    string email = 2;
}

message Tokens {
    string access_token = 1;
    string refresh_token = 2;
}

message RegisterResponse {
    UserRegisterRes userRegisterRes = 1;
    Tokens tokens = 2;
}

message User {
    int32 id = 1;
    string first_name = 2;
    string last_name = 3;
    string email = 4;
    string password = 5;
    string sex = 6;
    string avatar = 7;
    string date_of_birth = 8;
    string status = 9;
    string is_verify = 10;
    string role_id = 11;
    string created_at = 12;
    string updated_at = 13;
}


message Users {
    repeated User users = 1;
}

message SessionRequest {
    string email = 1;
    string client_agent = 2;
    string client_ip = 3;
}

message Session {
    int32 id = 1;
    string email = 2;
    string refresh_token = 3;
    string client_agent = 4;
    string client_ip = 5;
    string is_block = 6;
    string private_key = 7;
    string public_key = 8;
    string expired_at = 9;
    string created_at = 10;
    string updated_at = 11;
}

message TokenRequest {
    string token = 1;
    string key = 2;
}

message decode {
    int32 user_id = 1;
    int32 role_id = 2;
    string email = 3;
    int32 iat = 4;
    int32 exp = 5;
}
